spring:
  application:
    name: delivery
  profiles:
    include: swagger

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        default_schema: public
        default_batch_fetch_size: 500
    open-in-view: false

  datasource:
    driver-class-name: org.postgresql.Driver
    url: ${POSTGRES_URL}
    username: ${POSTGRES_USERNAME}
    password: ${POSTGRES_PASSWORD}


  kafka:
    bootstrap-servers: ${KAFKA_SERVER_URL}
    producer:
      key-serializer: org.apache.kafka.common.serialization.UUIDSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.UUIDDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
      username: ${REDIS_USERNAME}
      password: ${REDIS_PASSWORD}

server:
  port: 19094

eureka:
  client:
    service-url:
      defaultZone: http://eureka-server-service:19090/eureka

service:
  gateway:
    secret-key: ${GATEWAY_SECRET_KEY}

management:
  zipkin:
    tracing:
      endpoint: http://nangman-hub-zipkin-1:9411/api/v2/spans
  tracing:
    sampling:
      probability: 1.0